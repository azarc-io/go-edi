name: Release on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      # Step 2: Set up GitHub CLI
      # `gh` CLI is usually pre-installed on GitHub Actions runners, but if not, you can add an installation step:
      - name: Install GitHub CLI
        run: |
          sudo apt-get install -y gh jq

      # Step 3: Authenticate with GitHub CLI
      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth login --with-token <<< "$GITHUB_TOKEN"

      - name: Determine release type
        id: release_type
        run: |
          # Check if the branch is 'main'
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "default_bump=patch" >> $GITHUB_ENV
            echo "release_type=stable" >> $GITHUB_ENV
            echo "pre_release=false" >> $GITHUB_ENV
            echo "prerelease_suffix=" >> $GITHUB_ENV
          else
            echo "default_bump=skip" >> $GITHUB_ENV
            echo "release_type=beta" >> $GITHUB_ENV
            echo "pre_release=true" >> $GITHUB_ENV
            echo "prerelease_suffix=beta" >> $GITHUB_ENV
          fi

      - name: Increment and create tag
        id: create_tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          DEFAULT_BUMP: ${{ env.default_bump }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE_SUFFIX: ${{ env.prerelease_suffix }}
          WITH_V: true
          PRERELEASE: ${{ env.pre_release }}
          VERBOSE: true

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          name: "Release ${{ steps.create_tag.outputs.new_tag }}"
          body: "Automated release for version ${{ steps.create_tag.outputs.new_tag }}"
          prerelease: ${{ env.pre_release }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
