#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Define the repo path
REPO="github.com/azarc-io/go-edi"

# Check if the --include-rc flag is passed
INCLUDE_RC=false
for arg in "$@"; do
  if [ "$arg" == "--include-rc" ]; then
    INCLUDE_RC=true
  fi
done

# Fetch the latest tag, optionally including release candidates if the flag is set
if [ "$INCLUDE_RC" == "true" ]; then
  echo "Using latest RC if available"
  # Include release candidates (tags with -beta, -rc, etc.)
  TAG=$(git ls-remote --tags --sort="v:refname" https://$REPO.git | tail -n1 | sed 's/.*\///')
else
  echo "Using latest Stable"
  # Only include stable releases (no -rc, -beta, etc.)
  TAG=$(git ls-remote --tags --sort="v:refname" https://$REPO.git | \
      grep -E '/v[0-9]+\.[0-9]+\.[0-9]+$' | tail -n1 | sed 's/.*\///')
fi

if [ -z "$TAG" ]; then
  TAG="dev"
  echo "No suitable tags found; using default version: $TAG"
else
  echo "Found latest tag: $TAG"
fi

# Install the CLI with the version embedded
echo "Installing EDI CLI with version $TAG..."
go install -ldflags="-X main.Version=$TAG" $REPO/cmd/edi@$TAG

# Check if installation was successful
if command -v edi &> /dev/null; then
  echo "EDI CLI installed successfully!"
  edi --version
else
  echo "Installation failed."
fi
